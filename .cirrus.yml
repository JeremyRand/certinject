task:
  container:
    image: golangci/golangci-lint:latest
  generate_script: go generate ./...
  lint_script: golangci-lint run --no-config --enable-all --skip-files "file.go" --skip-files "nss.go" --disable gochecknoglobals,gomnd $GOLANGCI_ARGS -v --out-format json > lint-report.json
  matrix:
    - name: Go Lint $GOOS New
      env:
        GOLANGCI_ARGS: "--new-from-rev=HEAD~"
    - name: Go Lint $GOOS Mandatory
      env:
        GOLANGCI_ARGS: "--disable=errorlint,exhaustive,exhaustivestruct,gci,godot,gofumpt,nlreturn,paralleltest"
    - name: Go Lint $GOOS
      env:
        GOLANGCI_ARGS: ""
      allow_failures: true
  matrix:
    - env:
        GOOS: linux
    - env:
        GOOS: windows
  always:
    golangci_artifacts:
      path: lint-report.json
      type: text/json
      format: golangci

task:
  name: ShellCheck
  container:
    image: fedora:latest
  install_script: dnf install -y ShellCheck
  lint_script: bash testdata/shellcheck.bash

task:
  name: Cross-Compile Go $GO_VERSION
  container:
    image: golang:$GO_VERSION
    cpu: 8
    memory: 8G
  install_script:
    - go get github.com/mitchellh/gox
  fetch_script:
    - go get -tags "$GOX_TAGS" -d -u -v -t ./...
    - GOOS=windows GOARCH=amd64 go get -tags "$GOX_TAGS" -d -u -v -t ./...
  generate_script: go generate ./...
  build_script:
    # Nothing in this repo needs cgo.
    - CGO_ENABLED=0 gox -tags="$GOX_TAGS" -parallel=8 -osarch 'darwin/amd64 linux/386 linux/amd64 linux/arm linux/arm64 linux/ppc64 linux/ppc64le freebsd/386 freebsd/amd64 freebsd/arm openbsd/386 openbsd/amd64 netbsd/386 netbsd/amd64 netbsd/arm dragonfly/amd64 solaris/amd64 windows/386 windows/amd64' -output "$GOPATH/releasing/idist/$CIRRUS_REPO_NAME-$CIRRUS_TAG-{{.OS}}_{{.Arch}}/bin/{{.Dir}}" github.com/$CIRRUS_REPO_FULL_NAME/...
  env:
    GOX_TAGS: ""
    GO_VERSION: latest

# TODO: Go Unit tests

# TODO: "Testing config parsing" from travis.bash

# TODO: PowerShell tests

# TODO: Add multiple Go versions to Gox builds

# TODO: Re-add darwin/386 for old Go versions where it was supported

# TODO: Upload Nightlies

# TODO: IRC notifications on failure

# TODO: Cron
